<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>GetRandomSalesRep</name>
        <label>GetRandomSalesRep</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <actionName>GetRandomSalesRep</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Create_Assignment_History</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>territories</name>
            <value>
                <elementReference>RelatedSalesReps</elementReference>
            </value>
        </inputParameters>
        <nameSegment>GetRandomSalesRep</nameSegment>
        <outputParameters>
            <assignToReference>RandomSalesRep</assignToReference>
            <name>output</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email</name>
        <label>Send Email</label>
        <locationX>50</locationX>
        <locationY>1403</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Update_Contacts_Owner</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>EmailRecipientList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>The Owner of this Account has changed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <stringValue>An Account record has changed its owner. Check your Salesforce Org for more information.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Assign_Email_Recipients</name>
        <label>Assign Email Recipients</label>
        <locationX>50</locationX>
        <locationY>1295</locationY>
        <assignmentItems>
            <assignToReference>EmailRecipientList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Previous_User.Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailRecipientList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_New_User.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>GetTerritoryCount</name>
        <label>GetTerritoryCount</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>TerritoryCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>RelatedSalesReps</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>MoreThan1Territory</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>MoreThan1Territory</name>
        <label>MoreThan1Territory</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>OneToThreeTerritories</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TerritoryCount</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>TerritoryCount</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>3.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetRandomSalesRep</targetReference>
            </connector>
            <label>OneToThreeTerritories</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>ZipCodeChangeFlow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>ZipCodeChangeFlow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Assignment_History</name>
        <label>Create Assignment History</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>Update_Account_Owner</targetReference>
        </connector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Changed_By__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>New_Owner__c</field>
            <value>
                <elementReference>RandomSalesRep.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>New_Territory__c</field>
            <value>
                <elementReference>RandomSalesRep.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Previous_Owner__c</field>
            <value>
                <elementReference>$Record__Prior.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Previous_Territory__c</field>
            <value>
                <elementReference>Get_Previous_Sales_Rep.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Assignment_History__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_New_Sales_Reps</name>
        <label>Get New Sales Reps</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetTerritoryCount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BillingPostalCode</elementReference>
            </value>
        </filters>
        <object>Territory__c</object>
        <outputReference>RelatedSalesReps</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>OwnerId</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>Get_New_User</name>
        <label>Get New User</label>
        <locationX>50</locationX>
        <locationY>1187</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Email_Recipients</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RandomSalesRep.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Previous_Sales_Rep</name>
        <label>Get Previous Sales Rep</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_New_Sales_Reps</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.BillingPostalCode</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Territory__c</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Previous_User</name>
        <label>Get Previous User</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_New_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Previous_Sales_Rep.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Account_Owner</name>
        <label>Update Account Owner</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>Get_Previous_User</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>RandomSalesRep.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Contacts_Owner</name>
        <label>Update Contacts Owner</label>
        <locationX>50</locationX>
        <locationY>1511</locationY>
        <connector>
            <targetReference>Update_Opportunity_Owner</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>RandomSalesRep.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record.Contacts</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Opportunity_Owner</name>
        <label>Update Opportunity Owner</label>
        <locationX>50</locationX>
        <locationY>1619</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>RandomSalesRep.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record.Opportunities</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Previous_Sales_Rep</targetReference>
        </connector>
        <filterFormula>({!$Record__Prior.BillingPostalCode} &lt;&gt; {!$Record.BillingPostalCode} &amp;&amp; {!$Record__Prior.LastModifiedDate} == {!$Record__Prior.CreatedDate}) || ({!$Record__Prior.BillingPostalCode} == NULL &amp;&amp; {!$Record.BillingPostalCode} &lt;&gt; NULL)</filterFormula>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <name>EmailRecipientList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RandomSalesRep</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Territory__c</objectType>
    </variables>
    <variables>
        <name>RelatedSalesReps</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Territory__c</objectType>
    </variables>
    <variables>
        <name>TerritoryCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
